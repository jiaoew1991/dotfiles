local M = {
    "yetone/avante.nvim",
    event = "VeryLazy",
    lazy = false,
    version = false, -- set this if you want to always pull the latest change
    opts = {
    },
    -- if you want to build from source then do `make BUILD_FROM_SOURCE=true`
    build = "make BUILD_FROM_SOURCE=true",
    dependencies = {
        "nvim-treesitter/nvim-treesitter",
        "stevearc/dressing.nvim",
        "nvim-lua/plenary.nvim",
        "MunifTanjim/nui.nvim",
        --- The below dependencies are optional,
        "echasnovski/mini.pick",       -- for file_selector provider mini.pick
        "nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
        -- "zbirenbaum/copilot.lua",      -- for providers='copilot'
        {
            -- support for image pasting
            "HakonHarnes/img-clip.nvim",
            event = "VeryLazy",
            opts = {
                -- recommended settings
                default = {
                    embed_image_as_base64 = false,
                    prompt_for_file_name = false,
                    drag_and_drop = {
                        insert_mode = true,
                    },
                    -- required for Windows users
                    use_absolute_path = true,
                },
            },
        },
        {
            -- Make sure to set this up properly if you have lazy=true
            'MeanderingProgrammer/render-markdown.nvim',
            opts = {
                file_types = { "markdown", "Avante" },
            },
            ft = { "markdown", "Avante" },
        },
    },
}

function M.config()
    require('avante_lib').load()
    require("avante").setup({
        debug = true,
        provider = "minimaxai",
        vendors = {
            deepseek = {
                __inherited_from = "openai",
                endpoint = "https://api.deepseek.com",
                model = "deepseek-coder",
                api_key_name = "DEEPSEEK_API_KEY",
            },
            minimaxai = {
                __inherited_from = "openai",
                endpoint = "https://api.minimaxi.chat",
                api_key_name = "MINIMAX_API_KEY",
                model = "MiniMax-Text-01",
            },
        }
    })
end

return M
